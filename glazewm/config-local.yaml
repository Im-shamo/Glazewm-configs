general:
  # Commands to run when the WM has started. This is useful for running a
  # script or launching another application.
  # Example: The below command launches Zebar.
  startup_commands: ['shell-exec zebar']

  # Commands to run just before the WM is shutdown.
  # Example: The below command kills Zebar.
  shutdown_commands: ['shell-exec taskkill /IM zebar.exe /F']

  # Commands to run after the WM config is reloaded.
  config_reload_commands: []

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: 'monitor_focus'

gaps:
  # Whether to scale the gaps with the DPI of the monitor.
  scale_with_dpi: true

  # Gap between adjacent windows.
  inner_gap: '20px'

  # Gap between windows and the screen edge.
  outer_gap:
    top: '60px'
    right: '20px'
    bottom: '20px'
    left: '20px'

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: '#8dbcff'

    # Remove the title bar from the window's frame. Note that this can
    # cause rendering issues for some applications.
    hide_title_bar:
      enabled: false

    # Change the corner style of the window's frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: false
      # Allowed values: 'square', 'rounded', 'small_rounded'.
      style: 'rounded'

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: '#a1a1a1'
    hide_title_bar:
      enabled: false
    corner_style:
      enabled: false
      style: 'square'

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: 'tiling'

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: true

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: '1'
    display_name: "1: Web"
  - name: '2'
    display_name: "2: Code"
  - name: '3'
    display_name: "3: Terminal"
  - name: '4'
    display_name: "4: Game"
  - name: '5'
    display_name: "5: Discord"
  - name: '6'
    display_name: "6: Music"
  - name: '7'
    display_name: "7: Files"
  - name: '8'
    display_name: "8: VM"
  - name: '9'
  - name: '0'

window_rules:
  - commands: ['ignore']
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: 'zebar' }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: '[Pp]icture.in.[Pp]icture' }
        window_class: { regex: 'Chrome_WidgetWin_1|MozillaDialogClass' }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: 'PowerToys' }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: 'PowerToys' }
        window_title: { regex: '.*? - Peek' }
      - window_process: { equals: 'Lively' }
        window_class: { regex: 'HwndWrapper' }

      # Games
      - window_title: { equals: "osu!"}

      # Other
      - window_title: {equals: "Task Manager"}

      - window_process: { equals: "msrdc" }

  - commands: ['set-floating']
    match:
      - window_process: { equals: "VirtualBox"}
      - window_process: { equals: "VirtualBoxVM"}



binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: 'resize'
    keybindings:
      - commands: ['resize --width -2%']
        bindings: ['h', 'left']
      - commands: ['resize --width +2%']
        bindings: ['l', 'right']
      - commands: ['resize --height +2%']
        bindings: ['k', 'up']
      - commands: ['resize --height -2%']
        bindings: ['j', 'down']
      # Press enter/escape to return to default keybindings.
      - commands: ['wm-disable-binding-mode --name resize']
        bindings: ['escape', 'enter']

  # When enabled, all keybindings are disabled except for lalt+shift+p which
  # returns to default keybindings.
  - name: 'pause'
    keybindings:
      - commands: ['wm-disable-binding-mode --name pause']
        bindings: ['lalt+shift+p']

keybindings:
  # Shift focus in a given direction.
  - commands: ['focus --direction left']
    bindings: ['lalt+h', 'lalt+left']
  - commands: ['focus --direction right']
    bindings: ['lalt+l', 'lalt+right']
  - commands: ['focus --direction up']
    bindings: ['lalt+k', 'lalt+up']
  - commands: ['focus --direction down']
    bindings: ['lalt+j', 'lalt+down']

  # Move focused window in a given direction.
  - commands: ['move --direction left']
    bindings: ['lalt+shift+h', 'lalt+shift+left']
  - commands: ['move --direction right']
    bindings: ['lalt+shift+l', 'lalt+shift+right']
  - commands: ['move --direction up']
    bindings: ['lalt+shift+k', 'lalt+shift+up']
  - commands: ['move --direction down']
    bindings: ['lalt+shift+j', 'lalt+shift+down']

  # Resize focused window by a percentage or pixel amount.
  - commands: ['resize --width -2%']
    bindings: ['lalt+u']
  - commands: ['resize --width +2%']
    bindings: ['lalt+p']
  - commands: ['resize --height +2%']
    bindings: ['lalt+o']
  - commands: ['resize --height -2%']
    bindings: ['lalt+i']

  # As an lalternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  - commands: ['wm-enable-binding-mode --name resize']
    bindings: ['lalt+r']

  # Disables all keybindings until lalt+shift+p is pressed again.
  - commands: ['wm-enable-binding-mode --name pause']
    bindings: ['lalt+shift+p']

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ['toggle-tiling-direction']
    bindings: ['lalt+v']

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ['wm-cycle-focus']
    bindings: ['lalt+space']

  # Change the focused window to be floating.
  - commands: ['toggle-floating --centered']
    bindings: ['lalt+shift+space']

  # Change the focused window to be tiling.
  - commands: ['toggle-tiling']
    bindings: ['lalt+t']

  # Change the focused window to be fullscreen.
  - commands: ['toggle-fullscreen']
    bindings: ['lalt+f']

  # Minimize focused window.
  - commands: ['toggle-minimized']
    bindings: ['lalt+m']

  # Close focused window.
  - commands: ['close']
    bindings: ['lalt+shift+q']

  # Kill GlazeWM process safely.
  - commands: ['wm-exit']
    bindings: ['lalt+shift+e']

  # Re-evaluate configuration file.
  - commands: ['wm-reload-config']
    bindings: ['lalt+shift+r']

  # Redraw all windows.
  - commands: ['wm-redraw']
    bindings: ['lalt+shift+w']

  # Launch CMD terminal. lalternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ['shell-exec powershell']
    bindings: ['lalt+enter']

  # Focus the next/previous workspace defined in `workspaces` config.
  - commands: ['focus --next-workspace']
    bindings: ['lalt+s']
  - commands: ['focus --prev-workspace']
    bindings: ['lalt+a']

  # Focus the workspace that last had focus.
  - commands: ['focus --recent-workspace']
    bindings: ['lalt+d']

  # Swap workspace
  - commands: ["swap-workspace --stay-on-monitor --monitors 1 0"]
    bindings: ["lalt+oem_tilde"]

  # Workspace focus
  - commands: ['focus --summon-to-current-monitor --workspace 1']
    bindings: ['lalt+1']
  - commands: ['focus --summon-to-current-monitor --workspace 2']
    bindings: ['lalt+2']
  - commands: ['focus --summon-to-current-monitor --workspace 3']
    bindings: ['lalt+3']
  - commands: ['focus --summon-to-current-monitor --workspace 4']
    bindings: ['lalt+4']
  - commands: ['focus --summon-to-current-monitor --workspace 5']
    bindings: ['lalt+5']
  - commands: ['focus --summon-to-current-monitor --workspace 6']
    bindings: ['lalt+6']
  - commands: ['focus --summon-to-current-monitor --workspace 7']
    bindings: ['lalt+7']
  - commands: ['focus --summon-to-current-monitor --workspace 8']
    bindings: ['lalt+8']
  - commands: ['focus --summon-to-current-monitor --workspace 9']
    bindings: ['lalt+9']
  - commands: ['focus --summon-to-current-monitor --workspace 0']
    bindings: ['lalt+0']

  - commands: ['focus --workspace 1']
    bindings: ['lalt+control+1']
  - commands: ['focus --workspace 2']
    bindings: ['lalt+control+2']
  - commands: ['focus --workspace 3']
    bindings: ['lalt+control+3']
  - commands: ['focus --workspace 4']
    bindings: ['lalt+control+4']
  - commands: ['focus --workspace 5']
    bindings: ['lalt+control+5']
  - commands: ['focus --workspace 6']
    bindings: ['lalt+control+6']
  - commands: ['focus --workspace 7']
    bindings: ['lalt+control+7']
  - commands: ['focus --workspace 8']
    bindings: ['lalt+control+8']
  - commands: ['focus --workspace 9']
    bindings: ['lalt+control+9']
  - commands: ['focus --workspace 0']
    bindings: ['lalt+control+0']

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  - commands: ['move-workspace --direction left']
    bindings: ['lalt+q']
  - commands: ['move-workspace --direction right']
    bindings: ['lalt+w']

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ['move --workspace 1']
    bindings: ['lalt+shift+1']
  - commands: ['move --workspace 2']
    bindings: ['lalt+shift+2']
  - commands: ['move --workspace 3']
    bindings: ['lalt+shift+3']
  - commands: ['move --workspace 4']
    bindings: ['lalt+shift+4']
  - commands: ['move --workspace 5']
    bindings: ['lalt+shift+5']
  - commands: ['move --workspace 6']
    bindings: ['lalt+shift+6']
  - commands: ['move --workspace 7']
    bindings: ['lalt+shift+7']
  - commands: ['move --workspace 8']
    bindings: ['lalt+shift+8']
  - commands: ['move --workspace 9']
    bindings: ['lalt+shift+9']
  - commands: ['move --workspace 0']
    bindings: ['lalt+shift+0']

  # Application Shortcuts
  - commands: ["shell-exec firefox"]
    bindings: ["lalt+b"]
  - commands: ["shell-exec --hide-window code"]
    bindings: ["lalt+c"]
